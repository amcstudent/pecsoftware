/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pecUsers;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;

/**
 *
 *  
 */
public class Main extends javax.swing.JFrame {

    private Helper helper;
    private ProgressTask progressTask;

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        passText = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        userText = new javax.swing.JTextField();
        passLabel = new javax.swing.JLabel();
        userLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        passText.setToolTipText("");
        getContentPane().add(passText);
        passText.setBounds(210, 140, 155, 29);

        loginButton.setText("Login");
        loginButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                loginButtonMouseReleased(evt);
            }
        });
        getContentPane().add(loginButton);
        loginButton.setBounds(210, 200, 155, 47);

        userText.setToolTipText("");
        getContentPane().add(userText);
        userText.setBounds(210, 80, 155, 28);
        userText.getAccessibleContext().setAccessibleName("");

        passLabel.setText("Password : ");
        getContentPane().add(passLabel);
        passLabel.setBounds(100, 150, 56, 14);

        userLabel.setText("Username : ");
        getContentPane().add(userLabel);
        userLabel.setBounds(100, 90, 58, 14);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int width = (int) screenSize.getWidth();
        int height = (int) screenSize.getHeight();
        getContentPane().setBackground(Color.GRAY);
        File directory = new File(String.valueOf("log"));
        if (!directory.exists()) {
            directory.mkdir();
        }
        File file = new File(String.valueOf("log/log.txt"));
        if (!file.exists()) {
            try {
                file.createNewFile();
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        helper = new Helper();

        //size and location of window opened
        setSize(width * 33 / 100, height * 36 / 100);
        setLocationRelativeTo(null);

        //initialize components   
        Font currentFont = userLabel.getFont();
        userLabel.setSize(width * 10 / 100, height * 5 / 100);
        userLabel.setLocation(width * 6 / 100, height * 5 / 100);
        userLabel.setFont(currentFont.deriveFont(Font.BOLD, width * 1.1f / 100));
        userText.setSize(width * 10 / 100, height * 4 / 100);
        userText.setLocation(width * 15 / 100, height * 6 / 100);

        passLabel.setSize(width * 10 / 100, height * 5 / 100);
        passLabel.setLocation(width * 6 / 100, height * 12 / 100);
        passLabel.setFont(currentFont.deriveFont(Font.BOLD, width * 1.1f / 100));
        passText.setSize(width * 10 / 100, height * 4 / 100);
        passText.setLocation(width * 15 / 100, height * 13 / 100);

        loginButton.setSize(width * 8 / 100, height * 5 / 100);
        loginButton.setFont(currentFont.deriveFont(Font.PLAIN, width * 0.8f / 100));
        loginButton.setLocation(width * 16 / 100, height * 22 / 100);
    }//GEN-LAST:event_formWindowOpened

    private void loginButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginButtonMouseReleased
        if (loginButton.isEnabled()) {
            if (!helper.isConnected()) {
                JOptionPane.showMessageDialog(this,
                        "Please check your internet connection!",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            } else {
                if (userText.getText().trim().length() == 0 || passText.getText().trim().length() == 0) {
                    JOptionPane.showMessageDialog(this,
                            "No empty fields allowed!",
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                } else if (!helper.fieldValidity(userText.getText().trim()) || !helper.fieldValidity(passText.getText().trim())) {
                    JOptionPane.showMessageDialog(this,
                            "Invalid fields",
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                } else {
                    progressTask = new Main.ProgressTask();
                    progressTask.execute();
                }
            }
        }
    }//GEN-LAST:event_loginButtonMouseReleased

    class ProgressTask extends SwingWorker<Void, Void> {

        @Override
        public Void doInBackground() throws ClassNotFoundException, SQLException, IOException {
            setCursor(Cursor.WAIT_CURSOR);
            userText.setEnabled(false);
            passText.setEnabled(false);
            loginButton.setEnabled(false);
            String urlString = helper.getDomainName() + "checkUsersCred.php?user=" + userText.getText().trim() + "&pass=" + passText.getText().trim();
            long id = helper.getMethod(urlString);
            if (id == 0) {
                JOptionPane.showMessageDialog(getContentPane(),
                        "Username or Password is wrong.Please try again!",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                userText.setEnabled(true);
                passText.setEnabled(true);
                loginButton.setEnabled(true);
                setCursor(Cursor.DEFAULT_CURSOR);
            } else {
                urlString = helper.getDomainName() + "currentJobs.php";
                ArrayList<JobOrderModel> currentModel = helper.getJobOrders(urlString, 0, 29);
                urlString = helper.getDomainName() + "pendingJobs.php";
                ArrayList<JobOrderModel> pendingModel = helper.getJobOrders(urlString, 0, 29);
                urlString = helper.getDomainName() + "cancelledJobs.php";
                ArrayList<JobOrderModel> cancelledModel = helper.getJobOrders(urlString, 1, 27);
                urlString = helper.getDomainName() + "waitingJobs.php";
                ArrayList<JobOrderModel> waitingModel = helper.getJobOrders(urlString, 2, 31);
                urlString = helper.getDomainName() + "getCandidates.php";
                ArrayList<CandidateModel> candidatesModel = helper.getCandidates(urlString, 0, 23);
                urlString = helper.getDomainName() + "getCandidatesFoundDetails.php";
                ArrayList<CandidateModel> candidatesFoundModel = helper.getCandidates(urlString, 0, 23);
                urlString = helper.getDomainName() + "getResumes.php";
                ArrayList<ResumeModel> resumesModel = helper.getResumes(urlString);
                helper.writeToFile(userText.getText().trim() + " logged in");
                new Home(userText.getText(), currentModel, pendingModel, cancelledModel, waitingModel, candidatesModel, candidatesFoundModel, resumesModel).setVisible(true);
                dispose();
            }
            return null;
        }

        /*
     * Executed in event dispatching thread
         */
        @Override
        public void done() {

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel passLabel;
    private javax.swing.JPasswordField passText;
    private javax.swing.JLabel userLabel;
    private javax.swing.JTextField userText;
    // End of variables declaration//GEN-END:variables
}
